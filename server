require('dotenv').config();
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(express.json());

const messageSchema = new mongoose.Schema({
  name: { type: String, required: true },
  profileUrl: String,
  content: { type: String, required: true },
  createdAt: { type: Date, default: Date.now }
});

const Message = mongoose.model('Message', messageSchema);

app.post('/api/messages', async (req, res) => {
  try {
    const { name, profileUrl, content } = req.body;
    if (!name || !content) return res.status(400).json({ error: 'نام و متن پیام لازم است' });

    const msg = new Message({ name, profileUrl, content });
    await msg.save();

    res.status(201).json({ message: 'پیام ارسال شد', data: msg });
  } catch (err) {
    res.status(500).json({ error: 'خطای سرور' });
  }
});

app.get('/api/messages', async (req, res) => {
  try {
    const messages = await Message.find().sort({ createdAt: 1 });
    res.json(messages);
  } catch (err) {
    res.status(500).json({ error: 'خطای سرور' });
  }
});

const PORT = process.env.PORT || 4000;
const MONGO_URI = process.env.MONGO_URI || 'mongodb://localhost:27017/sketchor-chat';

mongoose.connect(MONGO_URI)
  .then(() => {
    console.log('MongoDB connected');
    app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
  })
  .catch(err => {
    console.error('MongoDB connection error:', err);
  });
